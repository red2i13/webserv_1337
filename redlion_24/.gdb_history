start
c
n
s
n
start
c
n
s
n
exit
start
b isDirectory(char const*) 
c
n
n
p path
start
c
n
p upload_path 
stat
start
c
n
p cwd
p cwd
exit
b set_upload_path(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&) 
c
start
c
p list[0]
n
p upload_path
p list[0]
n
start
y
c
n
start
c
n
:q
quit
exit
b handle_get(HttpRequest&, HttpResponse&, Server_block&) 
c
start
c
n
p location
p locations
n
p target
n
p n
p path
n
p path
make
start
c
n
p root_path 
n
p path
n
make
start
c
n
p path
n
c
make
make
start
n
start
c
n
p path
n
exit
b handle_request(HttpRequest&, HttpResponse&, Server_block&) 
c
start
c
n
p it
start
c
n
p it
n
make
c
start
info
info b
c
n
mae
make
start
c
n
c
exit
b handle_request(HttpRequest&, HttpResponse&, Server_block&) 
c
start
c
n
p it
p *it
n
p *it
start
c
n
p loc.allowed_methods 
p flag.get_location_block(req.target)
p flag
start
make
c
info b
c
n
start
c
n
s
b get_location_block(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const 
c
n
p loc
start
c
n
s
c
n
p loc.size
mkae
make
c
start
c
n
s
c
n
n
start
c
c
n
p loc
n
p last_slash 
make
c
start
c
n
n
c
exit
b set_location(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<ConfigNode, std::allocator<ConfigNode> >&) 
c
start
c
n
p location.upload_path 
exit
b handle_post(HttpRequest&, HttpResponse&, Server_block&) 
c
start
c
n
p locations
b get_locations_blocks() const 
c
n
b get_location_block(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) const 
c
n
p loc
n
s
n
exit
b handle_client_io(int) 
c
start
c
c
n
n
b 106
c
n
s
n
b handle_request
c
c
c
exit
start
c
start
n
a
s
n
starrt
start
c
start
b check_init_http_server() 
c
n
p (*n_dir)[k].name
exit
start
n
s
n
n
s
n
exit
start
b check_init_http_server() 
c
n
p master.size()
n
p (*ptr)[j].name
p (*ptr)[0].name
p (*ptr)[2].name
n
n
n
n
exit
c
start
c
exitr
exit
